* Packages
Run all as root.
** Apt
#+NAME: apt-sources
| name             | comment                           |
|------------------+-----------------------------------|
| curl             |                                   |
| wget             |                                   |
| xclip            |                                   |
| pass             |                                   |
| openvpn          |                                   |
| calibre          |                                   |
| emacs26          | requires ubuntu 19+               |
| cmake            | requires ubuntu 19+, for libvterm |
| libtool-bin      | for libvterm                      |
| fonts-firacode   | for doom emacs                    |
| zlib1g-dev       | for installing python w/ pyenv    |
| build-essential  | python + pyenv                    |
| libssl-dev       | python + pyenv                    |
| libbz2-dev       | python + pyenv                    |
| libreadline-dev  | python + pyenv                    |
| libsqlite3-dev   | python + pyenv                    |
| llvm             | python + pyenv                    |
| libncurses5-dev  | python + pyenv                    |
| libncursesw5-dev | python + pyenv                    |
| xz-utils         | python + pyenv                    |
| tk-dev           | python + pyenv                    |
| libffi-dev       | python + pyenv                    |
| liblzma-dev      | python + pyenv                    |
| python-openssl   | python + pyenv                    |
#+BEGIN_SRC elisp :var table=apt-sources
(s-join " " (-map 'car table))
#+END_SRC

#+NAME: apt-source-string
#+RESULTS:
: curl wget xclip pass openvpn emacs26 cmake libtool-bin fonts-firacode zlib1g-dev build-essential libssl-dev libbz2-dev libreadline-dev libsqlite3-dev llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl

#+BEGIN_SRC sh :var sources=apt-source-string :dir "/sudo::" :results output verbatim
yes | apt install $sources
#+END_SRC

#+RESULTS:
#+begin_example
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
build-essential is already the newest version (12.8ubuntu1).
cmake is already the newest version (3.13.4-1build1).
curl is already the newest version (7.65.3-1ubuntu3).
libbz2-dev is already the newest version (1.0.6-9.2).
libffi-dev is already the newest version (3.2.1-9).
liblzma-dev is already the newest version (5.2.4-1).
libncurses5-dev is already the newest version (6.1+20190803-1ubuntu1).
libncursesw5-dev is already the newest version (6.1+20190803-1ubuntu1).
libreadline-dev is already the newest version (8.0-3).
libssl-dev is already the newest version (1.1.1c-1ubuntu4).
libtool-bin is already the newest version (2.4.6-11).
openvpn is already the newest version (2.4.7-1ubuntu2).
wget is already the newest version (1.20.3-1ubuntu1).
xz-utils is already the newest version (5.2.4-1).
zlib1g-dev is already the newest version (1:1.2.11.dfsg-1ubuntu3).
fonts-firacode is already the newest version (1.207+dfsg1-1).
llvm is already the newest version (1:9.0-49~exp1).
pass is already the newest version (1.7.3-2).
python-openssl is already the newest version (19.0.0-1).
tk-dev is already the newest version (8.6.9+1).
xclip is already the newest version (0.13-1).
libsqlite3-dev is already the newest version (3.29.0-2ubuntu0.2).
emacs26 is already the newest version (26.3~1.git96dd019-kk1+19.10).
The following packages were automatically installed and are no longer required:
  fonts-font-awesome fonts-liberation2 freerdp2-x11 libabw-0.1-1
  libadplug-2.2.1-0v5 libaudiofile1 libbinio1v5 libboost-date-time1.67.0
  libboost-filesystem1.67.0 libboost-iostreams1.67.0 libboost-locale1.67.0
  libboost-system1.67.0 libboost-thread1.67.0 libcdio-cdda2 libcdio-paranoia2
  libcdr-0.1-1 libclucene-contribs1v5 libclucene-core1v5 libcmis-0.5-5v5
  libcolamd2 libe-book-0.1-1 libebur128-1 libeot0 libepubgen-0.1-1
  libetonyek-0.1-1 libexttextcat-2.0-0 libexttextcat-data libfreecell-solver0
  libfreehand-0.1-1 libfreerdp-client2-2 libfreerdp2-2
  libgrantlee-textdocument5 libid3tag0 libkf5plotting5 libkf5torrent6
  libkf5webkit5 libkgantt2 libkgantt2-l10n libkolabxml1v5 libktorrent-l10n
  liblangtag-common liblangtag1 libmhash2 libmikmod3 libmpdclient2
  libmspub-0.1-1 libmwaw-0.3-3 libmythes-1.2-0 libodfgen-0.1-1 liborcus-0.14-0
  libpagemaker-0.0-0 libphonenumber7 libprotobuf17 libqgpgme7
  libqt5networkauth5 libraptor2-0 librasqal3 librdf0 librevenge-0.0-0
  libsdl2-2.0-0 libsidplayfp4 libstartup-notification0 libsuitesparseconfig5
  libvisio-0.1-1 libvncclient1 libwinpr2-2 libwpd-0.10-10 libwpg-0.3-3
  libwps-0.4-4 libxerces-c3.2 libxmlsec1 libxmlsec1-nss libyajl2 libzzip-0-13
  linux-headers-5.3.0-18 linux-headers-5.3.0-18-generic
  linux-image-5.3.0-18-generic linux-modules-5.3.0-18-generic
  linux-modules-extra-5.3.0-18-generic lp-solve mariadb-client-core-10.3
  mariadb-common mariadb-server-core-10.3 paperkey qtgstreamer-plugins-qt5
Use 'apt autoremove' to remove them.
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
#+end_example

*** Antibody
#+BEGIN_SRC shell :dir "/sudo::"
curl -sfL git.io/antibody | sh -s - -b /usr/local/bin
#+END_SRC
#+RESULTS:

* Shell
#+BEGIN_SRC shell
# NOTE You probably want to generate an SSH key for bitbucket for this machine.
git clone https://bitbucket.org/txru/passwords.git ~/.password-store
# NOTE You should fetch your GPG key yourself.
git clone https://bitbucket.org/txru/dotfiles.git ~/.dotfiles
python3 ~/.dotfiles/home/copier.py
#+END_SRC
* Emacs
#+BEGIN_SRC shell
git clone https://github.com/hlissner/doom-emacs ~/.emacs.d
yes | ~/.emacs.d/bin/doom install

mkdir -p ~/.emacs.d/.local/straight/repos/emacs-libvterm/build
cd ~/.emacs.d/.local/straight/repos/emacs-libvterm/build
cmake ..
make
cd -
#+END_SRC
* Rust
#+BEGIN_SRC shell
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
source ~/.cargo/env

rustup toolchain add nightly
rustup component add rust-src
rustup component add clippy

cargo +nightly install racer
cargo install ripgrep
#+END_SRC
* Python
#+BEGIN_SRC shell
git clone https://github.com/pyenv/pyenv.git ~/.pyenv
git clone https://github.com/momo-lab/xxenv-latest.git "$(pyenv root)"/plugins/xxenv-latest
pyenv latest install
pyenv global $(pyenv versions | tail -n 1)
pip install black pyls ipython # requests beautifulsoup4
#+END_SRC
* Node
#+BEGIN_SRC shell
source $HOME/.zshrc
curl -fsSL https://raw.githubusercontent.com/nodenv/nodenv-installer/master/bin/nodenv-installer | bash

# Holy fuck I hate the Nodesystem
git clone https://github.com/momo-lab/xxenv-latest.git "$(nodenv root)"/plugins/xxenv-latest
# Fuck everything about node
nodenv latest install

nodenv global $(nodenv versions | tail -n 1)

npm install --global prettier
#+END_SRC
* Snap
#+BEGIN_SRC shell :dir "/sudo::"
snap install signal-desktop
snap install spotify
#+END_SRC
* KDE
#+BEGIN_SRC shell
file=RjGYtZL.jpg
pretty_name="susquehanna_park.jpg"
output_file="$HOME/Pictures/$pretty_name"
wget https://i.imgur.com/$file -O $output_file


dbus-send --session --dest=org.kde.plasmashell --type=method_call /PlasmaShell org.kde.PlasmaShell.evaluateScript 'string:
var Desktops = desktops();
for (i=0;i<Desktops.length;i++) {
        d = Desktops[i];
        d.wallpaperPlugin = "org.kde.image";
        d.currentConfigGroup = Array("Wallpaper",
                                    "org.kde.image",
                                    "General");
        d.writeConfig("Image", "file:/$output_file");

        console.log("$output_file");
}'
#+END_SRC

#+RESULTS:
